{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Spinner.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","Api/pixabayApi.js","components/Loader/Spinner.jsx","components/Modal/Modal.jsx","components/App/App.jsx","index.js","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","value","setValue","reset","className","s","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","currentTarget","ImageGalleryItem","webformatURL","tags","toggleModal","bigImg","src","alt","ImageGalleryItemImage","onClick","ImageGallery","query","map","el","largeImageURL","id","Button","fetchQuery","searchQuery","page","fetch","then","res","json","Spinner","spinnerWrapper","color","height","width","timeout","modalRoot","document","querySelector","Modal","closeModal","modalImg","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","console","log","createPortal","Overlay","event","target","img","App","status","setStatus","setQuery","setPage","name","setName","showModal","setShowModal","setModalImg","pixabayApi","hits","querys","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3b843df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2-qmv\",\"Modal\":\"Modal_Modal__1UoCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__27giA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3zfK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__3-VQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__Dorbn\",\"SearchForm\":\"Searchbar_SearchForm__3nZRE\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1t0s9\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__lcUal\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2RuAC\"};","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport s from 'components/Searchbar/Searchbar.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    const { value } = e.currentTarget;\r\n    setValue(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(value);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleInputChange}\r\n          value={value}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\n\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from 'components/ImageGalleryItem/ImageGalleryItem.module.css';\r\n\r\n\r\nexport default function ImageGalleryItem({ webformatURL, tags, toggleModal, bigImg }) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={s.ImageGalleryItemImage}\r\n        onClick={() =>{toggleModal();bigImg()}}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  bigImg: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from 'components/ImageGallery/ImageGallery.module.css';\r\nimport ImageGalleryItem from 'components/ImageGalleryItem/ImageGalleryItem';\r\n\r\nfunction ImageGallery({ query, toggleModal, bigImg }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {query.map(el => (\r\n        <ImageGalleryItem\r\n          key={el.id}\r\n          largeImageURL={el.largeImageURL}\r\n          webformatURL={el.webformatURL}\r\n          tags={el.tags}\r\n          toggleModal={() => toggleModal()}\r\n          bigImg={() => bigImg(el.id, el.largeImageURL, el.tags)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      tags: PropTypes.string,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n    }),\r\n  ),\r\n  bigImg: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from 'components/Button/Button.module.css';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button className={s.Button} type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","const BASE_URL = 'https://pixabay.com/api';\r\nconst API_KEY = '21800674-819b02d10e21d1802ff230ab2';\r\n\r\nfunction fetchQuery(searchQuery, page) {\r\n  return fetch(\r\n    `${BASE_URL}/?key=${API_KEY}&q=${searchQuery}\r\n      &image_type=photo&orientation=horizontal&page=\r\n      ${page}&per_page=12`,\r\n  ).then(res => res.json());\r\n}\r\n\r\nexport default fetchQuery;","import Loader from 'react-loader-spinner';\r\nimport s from 'components/Loader/Spinner.module.css';\r\n\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className={s.spinnerWrapper}>\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={5000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from 'components/Modal/Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ closeModal, modalImg }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('click');\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const backDropClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={backDropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={modalImg.img} alt={modalImg.tags} key={modalImg.id} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  modalImg: PropTypes.object,\r\n};\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\nimport Button from 'components/Button/Button';\nimport pixabayApi from 'Api/pixabayApi';\nimport Spinner from 'components/Loader/Spinner';\nimport Modal from 'components/Modal/Modal';\n\nexport default function App() {\n  const [status, setStatus] = useState('idle');\n  const [query, setQuery] = useState([]);\n  const [page, setPage] = useState(1);\n  const [name, setName] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalImg, setModalImg] = useState(null);\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n\n    if (page === 1) {\n      setStatus('pending');\n      pixabayApi(name, page)\n        .then(query => query.hits)\n        .then(query => setQuery(query), setStatus('resolved'));\n    }\n\n    if (page > 1) {\n      setStatus('pending');\n      pixabayApi(name, page)\n        .then(querys => querys.hits)\n        .then(querys => {\n          return (\n            setQuery([...query, ...querys]),\n            setStatus('resolved'),\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            })\n          );\n        });\n    }\n  }, [name, page]);\n\n  const handleSubmitForm = value => {\n    setName(value);\n    setPage(1);\n  };\n\n  const LoadBtn = () => {\n    setPage(page + 1);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const FindmodalImg = (id, img, tags) => {\n    setModalImg({ id: id, img: img, tags: tags });\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleSubmitForm} />\n      {status === 'pending' && <Spinner />}\n      <ImageGallery\n        query={query}\n        toggleModal={toggleModal}\n        bigImg={FindmodalImg}\n      />\n      {status === 'resolved' && <Button onClick={LoadBtn} />}\n      {showModal && <Modal closeModal={toggleModal} modalImg={modalImg} />}\n    </div>\n  );\n}\n\n// export default class App extends Component {\n//   state = {\n//     status: 'idle',\n//     query: [],\n//     page: 1,\n//     name: '',\n//     showModal: false,\n//     modalImg: null,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.name !== this.state.name) {\n//       this.setState({ status: 'pending' });\n\n//       pixabayApi(this.state.name, this.state.page)\n//         .then(query => query.hits)\n//         .then(query => this.setState({ query: query, status: 'resolved' }));\n//     }\n\n//     if (prevState.page !== this.state.page && this.state.page !== 1) {\n//       this.setState({ status: 'pending' });\n\n//       pixabayApi(this.state.name, this.state.page)\n//         .then(query => query.hits)\n//         .then(query =>\n//           this.setState(prevState => ({\n//             query: [...prevState.query, ...query],\n//             status: 'resolved',\n//           })),\n//         );\n//     }\n//     if (prevState.query !== this.state.query) {\n//       window.scrollTo({\n//         top: document.documentElement.scrollHeight,\n//         behavior: 'smooth',\n//       });\n//     }\n//   }\n\n//   handleSubmitForm = value => {\n//     this.setState({ name: value, page: 1 });\n//   };\n\n//   LoadBtn = () => {\n//     this.setState({ page: this.state.page + 1 });\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   FindmodalImg = (id, img, tags) => {\n//     this.setState({ modalImg: { id: id, img: img, tags: tags } });\n//   };\n\n//   render() {\n//     const { query, status, showModal, modalImg } = this.state;\n\n//     return (\n//       <div className=\"App\">\n//         <Searchbar onSubmit={this.handleSubmitForm} />\n//         {status === 'pending' && <Spinner />}\n//         <ImageGallery\n//           query={query}\n//           toggleModal={this.toggleModal}\n//           bigImg={this.FindmodalImg}\n//         />\n//         {status === 'resolved' && <Button onClick={this.LoadBtn} />}\n//         {showModal && (\n//           <Modal closeModal={this.toggleModal} modalImg={modalImg} />\n//         )}\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__7XhPM\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__lkfZT\"};"],"sourceRoot":""}